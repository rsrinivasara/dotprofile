;; -*- mode: emacs-lisp -*-
;; This file is loaded by Spacemacs at startup.
;; It must be stored in your home directory.

;; Configuration Layers
;; --------------------

(setq-default
 ;; List of additional paths where to look for configuration layers.
 ;; Paths must have a trailing slash (ie. `~/.mycontribs/')
 dotspacemacs-configuration-layer-path '()
 ;; List of configuration layers to load.
 ;; dotspacemacs-configuration-layers '()
 dotspacemacs-configuration-layers '(git
                                     company-mode)

 ;; A list of packages and/or extensions that will not be install and loaded.
 dotspacemacs-excluded-packages '(company-tern)
)

;; Settings
;; --------

(setq-default
 ;; Default theme applied at startup
 dotspacemacs-default-theme 'zenburn
 ;; Guide-key delay in seconds. The Guide-key is the popup buffer listing
 ;; the commands bound to the current keystrokes.
 dotspacemacs-guide-key-delay 0.4
 ;; If non nil the frame is maximized when Emacs starts up (Emacs 24.4+ only)
 dotspacemacs-fullscreen-at-startup t
 ;; If non nil smooth scrolling (native-scrolling) is enabled. Smooth scrolling
 ;; overrides the default behavior of Emacs which recenters the point when
 ;; it reaches the top or bottom of the screen
 dotspacemacs-smooth-scrolling nil
 ;; If non nil pressing 'jk' in insert state, ido or helm will activate the
 ;; evil leader.
 dotspacemacs-feature-toggle-leader-on-jk nil
 ;; The default package repository used if no explicit repository has been
 ;; specified with an installed package.
 ;; Not used for now.
 dotspacemacs-default-package-repository nil
)

;; Initialization Hooks
;; --------------------

(defun dotspacemacs/init ()
  "User initialization for Spacemacs. This function is called at the very
 startup."
  (unless (string-equal user-login-name "rsriniva")
         (setq paradox-github-token "7d70779d8bb6bed9449ff623f495f121fd68b8c7"))

  (if (string-equal user-login-name "rsriniva")
   (setq url-proxy-services
    '(("http" . "devproxy.bloomberg.com:82")
      ("https" . "devproxy.bloomberg.com:82")))
   (setq git-enable-github-support t))

  (setq-default dotspacemacs-persistent-server t)
)

(c-add-style
 "bde"
 '((c-basic-offset . 4)
   (fill-column . 79)
   (c-echo-syntactic-information-p . t)
   (c-backslash-column . 78)
   (c-backslash-max-column . 78)
   (c-hanging-braces-alist     . ((substatement-open after)
                                  (class-open after)
                                  (block-close . (before after))
                                  (brace-list-open)))
   (c-hanging-colons-alist     . ((member-init-intro before)
                                  (inher-intro)
                                  (case-label after)
                                  (label after)
                                  (access-label after)))
   (c-cleanup-list             . (scope-operator
                                  empty-defun-braces
                                  defun-close-semi))
   (c-offsets-alist
    (topmost-intro         . 0)
    (innamespace           . 0)
    (inclass               . +)
    (access-label          . /)
    ;; (comment-intro         . bde-indent-comment-intro)
    (member-init-intro     . 0)
    (member-init-cont      . /)
    (substatement-open     . 0)
    (case-label            . *)
    ;; (statement-block-intro . bde-indent-statement-block-intro)
    (statement-case-intro  . *)
    (statement-case-open   . +)
    (inline-open           . 0)
    (cpp-define-intro      . 4)
    (func-decl-cont        . 0)
    )))

(defun rsriniva-c-headers-path-system ()
  (list "/usr/include"
        "/usr/local/include"
        "/opt/swt/install/gcc-4.9.2/include/c++/4.9.2"
        "/opt/swt/install/gcc-4.9.2/include/c++/4.9.2/x86_64-unknown-linux-gnu"))

(defun ram-c-headers-path-system ()
  (list "/usr/include"
        "/usr/local/include"
        "/usr/include/c++/4.9.2"
        "/usr/include/c++/4.9.2/x86_64-unknown-linux-gnu"))

(defun custom-c-headers-path-system ()
  (if (equal user-login-name "rsriniva")
      (rsriniva-c-headers-path-system)
    (ram-c-headers-path-system)))

(defun dotspacemacs/config ()
  "This is were you can ultimately override default Spacemacs configuration.
This function is called at the very end of Spacemacs initialization."
  (unless (display-graphic-p)
    (setq-default linum-format "%4d\u2502")
    (setq-default linum-relative-format "%3s\u2502"))
    ;; (setq linum-format "%4d ")
    ;; (setq linum-relative-format "%3s "))

  (if (string-equal system-type "darwin")
      (spacemacs/set-font "Monaco" 12)
      (if (string-equal user-login-name "rsriniva")
          (spacemacs/set-font "Liberation Mono for Powerline" 13)
        (spacemacs/set-font "Monaco" 13)))

  (add-hook 'perl-mode-hook 'flycheck-mode)
  (add-hook 'c-mode-common-hook 'flycheck-mode)

  (add-hook 'find-file-hook (lambda() (company-mode/more-than-prefix-guesser)))

  ;; (add-hook 'cc-mode-hook (lambda () (toggle-truncate-lines
  ;;                                     turn-on-fci-mode)))

  (setq c-default-style "bde")
  (add-hook 'c-mode-common-hook
            (lambda ()
              (c-toggle-auto-newline -1)
              (set-fill-column 79)
              (setq tab-width 4)
              (setq indent-tabs-mode nil)
              (setq c-basic-offset 4)))

  (setq company-c-headers-path-system 'custom-c-headers-path-system)

  (setq locale-coding-system 'utf-8) ; pretty
  (set-terminal-coding-system 'utf-8) ; pretty
  (set-keyboard-coding-system 'utf-8) ; pretty
  (set-selection-coding-system 'utf-8) ; please
  (prefer-coding-system 'utf-8) ; with sugar on top
  (set-language-environment 'utf-8)

  (setq x-select-enable-clipboard t)
  (setq interprogram-paste-function 'x-cut-buffer-or-selection-value)

  (setq guide-key-tip/enabled
        (if window-system t))

  (setq whitespace-line-column 79)
  (setq whitespace-display-mappings
      '((space-mark 32 [183] [46])
        (space-mark 160 [164] [95])
        (space-mark 2208 [2212] [95])
        (space-mark 2336 [2340] [95])
        (space-mark 3616 [3620] [95])
        (space-mark 3872 [3876] [95])
        (newline-mark 10 [182 10]) ;non-default newline char
        (tab-mark 9 [187 9] [92 9])
        ))
  (setq whitespace-style '(face trailing tabs empty spaces tab-mark lines-tail))
  (setq whitespace-space-regexp "\\( +$\\)")
  ;; "\\(^ +\\)"    visualize only leading SPACEs.
  ;; "\\( +$\\)"    visualize only trailing SPACEs.
  ;; "\\(^ +\\| +$\\)"  visualize leading and/or trailing SPACEs.
  ;; "\t\\( +\\)\t"   visualize only SPACEs between TABs.
  (add-hook 'prog-mode-hook 'whitespace-mode)


  ;; (setq fci-rule-column 79)
  ;; (setq fci-enabled 1)
  ;; (fci-mode 1)
  ;; (toggle-fill-column-indicator)
  ;; (toggle-truncate-lines)
)

;; Custom variables
;; ----------------

;; Do not write anything in this section. This is where Emacs will
;; auto-generate custom variable definitions.
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ahs-case-fold-search nil)
 '(ahs-default-range (quote ahs-range-whole-buffer))
 '(ahs-idle-interval 0.25)
 '(ahs-idle-timer 0 t)
 '(ahs-inhibit-face-list nil)
 '(org-agenda-files nil)
 '(paradox-automatically-star nil)
 '(ring-bell-function (quote ignore) t))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(company-tooltip-common ((t (:inherit company-tooltip :weight bold :underline nil))))
 '(company-tooltip-common-selection ((t (:inherit company-tooltip-selection :weight bold :underline nil)))))
